@page "/valuation"
@using MudBlazor
@using NieruchApp.Client.Models
@using NieruchApp.Client.Services
@inject ValuationService ValuationService

<PageTitle>Nowa wycena</PageTitle>

<MudContainer Class="mx-2">
    <MudText Typo="Typo.h3" Class="my-2">Nowa wycena</MudText>
    <MudDivider DividerType="DividerType.FullWidth" />
</MudContainer>

<MudPaper Width="100%" Class="d-inline-flex py-3" Elevation="0">
    <MudCard Class="mx-10">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">Lokalizacja</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>Wybierz dzielnicę Warszawy z listy poniżej.</MudText>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            <MudSelect T="DistrictDto" @bind-Value="selectedDistrict" ToStringFunc="@((x) => x?.DistrictName)" AnchorOrigin="Origin.BottomCenter" Clearable>
                @foreach (var district in districts)
                {
                    <MudSelectItem T="DistrictDto" Value="@district" />
                }
            </MudSelect>

        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Text" Color="Color.Primary">Zatwierdź</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Primary">Pomiń</MudButton>
        </MudCardActions>
    </MudCard>

    @foreach (var valuationStep in valuationSteps)
    {
        <ValuationStep Step="@valuationStep" OnApproval="UpdateValuationSummary" />
    }
 

</MudPaper>


@code {

    List<ValuationStepDto> valuationSteps = new();

    List<DistrictDto> districts;

    DistrictDto? selectedDistrict;

    List<ValuationStepOptionDto> selectedOptions = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        districts = [new() { DistrictId = 1, DistrictName = "Bemowo" }, new() { DistrictId = 2, DistrictName = "Bielany" }];
        valuationSteps = await ValuationService.GetValuationSteps();
    }

    void UpdateValuationSummary(ValuationStepOptionDto option)
    {
        selectedOptions.Add(option);        
    }
}
